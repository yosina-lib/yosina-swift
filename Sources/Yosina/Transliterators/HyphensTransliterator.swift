// This file is automatically generated. Do not edit.
// Generated on: 2025-09-20 03:42:24 +0000

import Foundation

public struct HyphensTransliterator: Transliterator {
    public enum Precedence: String, CaseIterable {
        case ascii
        case jisx0201
        case jisx0208_90
        case jisx0208_90_windows
        case jisx0208_verbatim
    }

    public struct Options {
        public var precedence: [Precedence] = [.jisx0208_90]

        public init() {}
    }

    private struct HyphensRecord {
        let ascii: String?
        let jisx0201: String?
        let jisx0208_90: String?
        let jisx0208_90_windows: String?
        let jisx0208_verbatim: String?
    }

    private let options: Options
    private static let mapping: [Character: HyphensRecord] = [
        "\u{002D}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2212}",
            jisx0208_90_windows: "\u{2212}",
            jisx0208_verbatim: nil
        ),
        "\u{007C}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FF5C}",
            jisx0208_verbatim: nil
        ),
        "\u{007E}": HyphensRecord(
            ascii: "\u{007E}",
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{301C}",
            jisx0208_90_windows: "\u{FF5E}",
            jisx0208_verbatim: nil
        ),
        "\u{00A2}": HyphensRecord(
            ascii: nil,
            jisx0201: nil,
            jisx0208_90: "\u{00A2}",
            jisx0208_90_windows: "\u{FFE0}",
            jisx0208_verbatim: "\u{00A2}"
        ),
        "\u{00A3}": HyphensRecord(
            ascii: nil,
            jisx0201: nil,
            jisx0208_90: "\u{00A3}",
            jisx0208_90_windows: "\u{FFE1}",
            jisx0208_verbatim: "\u{00A3}"
        ),
        "\u{00A6}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FF5C}",
            jisx0208_verbatim: "\u{00A6}"
        ),
        "\u{02D7}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2212}",
            jisx0208_90_windows: "\u{FF0D}",
            jisx0208_verbatim: nil
        ),
        "\u{2010}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2010}",
            jisx0208_90_windows: "\u{2010}",
            jisx0208_verbatim: "\u{2010}"
        ),
        "\u{2011}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2010}",
            jisx0208_90_windows: "\u{2010}",
            jisx0208_verbatim: nil
        ),
        "\u{2012}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2015}",
            jisx0208_90_windows: "\u{2015}",
            jisx0208_verbatim: nil
        ),
        "\u{2013}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2015}",
            jisx0208_90_windows: "\u{2015}",
            jisx0208_verbatim: "\u{2013}"
        ),
        "\u{2014}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2014}",
            jisx0208_90_windows: "\u{2015}",
            jisx0208_verbatim: "\u{2014}"
        ),
        "\u{2015}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2015}",
            jisx0208_90_windows: "\u{2015}",
            jisx0208_verbatim: "\u{2015}"
        ),
        "\u{2016}": HyphensRecord(
            ascii: nil,
            jisx0201: nil,
            jisx0208_90: "\u{2016}",
            jisx0208_90_windows: "\u{2225}",
            jisx0208_verbatim: "\u{2016}"
        ),
        "\u{203E}": HyphensRecord(
            ascii: nil,
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{FFE3}",
            jisx0208_90_windows: "\u{FFE3}",
            jisx0208_verbatim: "\u{203D}"
        ),
        "\u{2043}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2010}",
            jisx0208_90_windows: "\u{2010}",
            jisx0208_verbatim: nil
        ),
        "\u{2053}": HyphensRecord(
            ascii: "\u{007E}",
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{301C}",
            jisx0208_90_windows: "\u{301C}",
            jisx0208_verbatim: nil
        ),
        "\u{2212}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2212}",
            jisx0208_90_windows: "\u{FF0D}",
            jisx0208_verbatim: "\u{2212}"
        ),
        "\u{2225}": HyphensRecord(
            ascii: nil,
            jisx0201: nil,
            jisx0208_90: "\u{2016}",
            jisx0208_90_windows: "\u{2225}",
            jisx0208_verbatim: "\u{2225}"
        ),
        "\u{223C}": HyphensRecord(
            ascii: "\u{007E}",
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{301C}",
            jisx0208_90_windows: "\u{FF5E}",
            jisx0208_verbatim: nil
        ),
        "\u{223D}": HyphensRecord(
            ascii: "\u{007E}",
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{301C}",
            jisx0208_90_windows: "\u{FF5E}",
            jisx0208_verbatim: nil
        ),
        "\u{2500}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2015}",
            jisx0208_90_windows: "\u{2015}",
            jisx0208_verbatim: "\u{2500}"
        ),
        "\u{2501}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2015}",
            jisx0208_90_windows: "\u{2015}",
            jisx0208_verbatim: "\u{2501}"
        ),
        "\u{2502}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FF5C}",
            jisx0208_verbatim: "\u{2502}"
        ),
        "\u{2796}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2212}",
            jisx0208_90_windows: "\u{FF0D}",
            jisx0208_verbatim: nil
        ),
        "\u{29FF}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2010}",
            jisx0208_90_windows: "\u{FF0D}",
            jisx0208_verbatim: nil
        ),
        "\u{2E3A}": HyphensRecord(
            ascii: "\u{002D}\u{002D}",
            jisx0201: "\u{002D}\u{002D}",
            jisx0208_90: "\u{2014}\u{2014}",
            jisx0208_90_windows: "\u{2015}\u{2015}",
            jisx0208_verbatim: nil
        ),
        "\u{2E3B}": HyphensRecord(
            ascii: "\u{002D}\u{002D}\u{002D}",
            jisx0201: "\u{002D}\u{002D}\u{002D}",
            jisx0208_90: "\u{2014}\u{2014}\u{2014}",
            jisx0208_90_windows: "\u{2015}\u{2015}\u{2015}",
            jisx0208_verbatim: nil
        ),
        "\u{301C}": HyphensRecord(
            ascii: "\u{007E}",
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{301C}",
            jisx0208_90_windows: "\u{FF5E}",
            jisx0208_verbatim: "\u{301C}"
        ),
        "\u{30A0}": HyphensRecord(
            ascii: "\u{003D}",
            jisx0201: "\u{003D}",
            jisx0208_90: "\u{FF1D}",
            jisx0208_90_windows: "\u{FF1D}",
            jisx0208_verbatim: "\u{30A0}"
        ),
        "\u{30FB}": HyphensRecord(
            ascii: nil,
            jisx0201: "\u{FF65}",
            jisx0208_90: "\u{30FB}",
            jisx0208_90_windows: "\u{30FB}",
            jisx0208_verbatim: "\u{30FB}"
        ),
        "\u{30FC}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{30FC}",
            jisx0208_90_windows: "\u{30FC}",
            jisx0208_verbatim: "\u{30FC}"
        ),
        "\u{FE31}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FF5C}",
            jisx0208_verbatim: nil
        ),
        "\u{FE58}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2010}",
            jisx0208_90_windows: "\u{2010}",
            jisx0208_verbatim: nil
        ),
        "\u{FE63}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2010}",
            jisx0208_90_windows: "\u{2010}",
            jisx0208_verbatim: nil
        ),
        "\u{FF02}": HyphensRecord(
            ascii: "\u{0022}",
            jisx0201: "\u{0022}",
            jisx0208_90: "\u{2033}",
            jisx0208_90_windows: "\u{FF02}",
            jisx0208_verbatim: nil
        ),
        "\u{FF07}": HyphensRecord(
            ascii: "\u{0027}",
            jisx0201: "\u{0027}",
            jisx0208_90: "\u{2032}",
            jisx0208_90_windows: "\u{FF07}",
            jisx0208_verbatim: nil
        ),
        "\u{FF0D}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{002D}",
            jisx0208_90: "\u{2212}",
            jisx0208_90_windows: "\u{FF0D}",
            jisx0208_verbatim: nil
        ),
        "\u{FF5C}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FF5C}",
            jisx0208_verbatim: "\u{FF5C}"
        ),
        "\u{FF5E}": HyphensRecord(
            ascii: "\u{007E}",
            jisx0201: "\u{007E}",
            jisx0208_90: "\u{301C}",
            jisx0208_90_windows: "\u{FF5E}",
            jisx0208_verbatim: nil
        ),
        "\u{FFE4}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FFE4}",
            jisx0208_verbatim: "\u{FFE4}"
        ),
        "\u{FF70}": HyphensRecord(
            ascii: "\u{002D}",
            jisx0201: "\u{FF70}",
            jisx0208_90: "\u{30FC}",
            jisx0208_90_windows: "\u{30FC}",
            jisx0208_verbatim: nil
        ),
        "\u{FFE8}": HyphensRecord(
            ascii: "\u{007C}",
            jisx0201: "\u{007C}",
            jisx0208_90: "\u{FF5C}",
            jisx0208_90_windows: "\u{FF5C}",
            jisx0208_verbatim: nil
        ),
    ]

    public init(options: Options = Options()) {
        self.options = options
    }

    public func transliterate<S: Sequence>(_ chars: S) -> [TransliteratorChar] where S.Element == TransliteratorChar {
        var result: [TransliteratorChar] = []
        var offset = 0

        for char in chars {
            if let charValue = char.value, let record = Self.mapping[charValue] {
                let replacement = getReplacement(for: record)
                if let replacement = replacement, replacement != String(charValue) {
                    // Handle multi-character replacements
                    for replacementChar in replacement {
                        let c = TransliteratorChar(
                            value: replacementChar,
                            offset: offset,
                            source: char
                        )
                        result.append(c)
                        offset += replacementChar.utf8.count
                    }
                    continue
                }
            }
            let char = char.withOffset(offset)
            offset += char.utf8Count
            result.append(char)
        }

        return result
    }

    private func getReplacement(for record: HyphensRecord) -> String? {
        for prec in options.precedence {
            switch prec {
            case .ascii:
                if let replacement = record.ascii { return replacement }
            case .jisx0201:
                if let replacement = record.jisx0201 { return replacement }
            case .jisx0208_90:
                if let replacement = record.jisx0208_90 { return replacement }
            case .jisx0208_90_windows:
                if let replacement = record.jisx0208_90_windows { return replacement }
            case .jisx0208_verbatim:
                if let replacement = record.jisx0208_verbatim { return replacement }
            }
        }
        return nil
    }
}
